"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.NATIVE_OVERHEAD = exports.NATIVE_UNWRAP_OVERHEAD = exports.NATIVE_WRAP_OVERHEAD = exports.TOKEN_OVERHEAD = exports.SINGLE_HOP_OVERHEAD = exports.COST_PER_HOP = exports.COST_PER_INIT_TICK = exports.BASE_SWAP_COST = exports.COST_PER_UNINIT_TICK = void 0;
const bignumber_1 = require("@ethersproject/bignumber");
const warp_sdk_core_1 = require("@warpgatex/warp-sdk-core");
const providers_1 = require("../../../../providers");
// Cost for crossing an uninitialized tick.
exports.COST_PER_UNINIT_TICK = bignumber_1.BigNumber.from(0);
//l2 execution fee on optimism is roughly the same as mainnet
const BASE_SWAP_COST = (id) => {
    switch (id) {
        case warp_sdk_core_1.ChainId.MAINNET:
        case warp_sdk_core_1.ChainId.GOERLI:
        case warp_sdk_core_1.ChainId.SEPOLIA:
        case warp_sdk_core_1.ChainId.OPTIMISM:
        case warp_sdk_core_1.ChainId.OPTIMISM_GOERLI:
        case warp_sdk_core_1.ChainId.BNB:
        case warp_sdk_core_1.ChainId.AVALANCHE:
        case warp_sdk_core_1.ChainId.BASE:
        case warp_sdk_core_1.ChainId.BASE_GOERLI:
            return bignumber_1.BigNumber.from(2000);
        case warp_sdk_core_1.ChainId.ARBITRUM_ONE:
        case warp_sdk_core_1.ChainId.ARBITRUM_GOERLI:
            return bignumber_1.BigNumber.from(5000);
        case warp_sdk_core_1.ChainId.POLYGON:
        case warp_sdk_core_1.ChainId.POLYGON_MUMBAI:
            return bignumber_1.BigNumber.from(2000);
        case warp_sdk_core_1.ChainId.CELO:
        case warp_sdk_core_1.ChainId.CELO_ALFAJORES:
            return bignumber_1.BigNumber.from(2000);
        //TODO determine if sufficient
        case warp_sdk_core_1.ChainId.GNOSIS:
            return bignumber_1.BigNumber.from(2000);
        case warp_sdk_core_1.ChainId.MOONBEAM:
            return bignumber_1.BigNumber.from(2000);
        case warp_sdk_core_1.ChainId.IMX_TESTNET:
            return bignumber_1.BigNumber.from(2000);
        case warp_sdk_core_1.ChainId.IMX_MAINNET:
            return bignumber_1.BigNumber.from(2000);
        default:
            return bignumber_1.BigNumber.from(2000);
    }
};
exports.BASE_SWAP_COST = BASE_SWAP_COST;
const COST_PER_INIT_TICK = (id) => {
    switch (id) {
        case warp_sdk_core_1.ChainId.MAINNET:
        case warp_sdk_core_1.ChainId.GOERLI:
        case warp_sdk_core_1.ChainId.SEPOLIA:
        case warp_sdk_core_1.ChainId.BNB:
        case warp_sdk_core_1.ChainId.AVALANCHE:
            return bignumber_1.BigNumber.from(31000);
        case warp_sdk_core_1.ChainId.OPTIMISM:
        case warp_sdk_core_1.ChainId.OPTIMISM_GOERLI:
        case warp_sdk_core_1.ChainId.BASE:
        case warp_sdk_core_1.ChainId.BASE_GOERLI:
            return bignumber_1.BigNumber.from(31000);
        case warp_sdk_core_1.ChainId.ARBITRUM_ONE:
        case warp_sdk_core_1.ChainId.ARBITRUM_GOERLI:
            return bignumber_1.BigNumber.from(31000);
        case warp_sdk_core_1.ChainId.POLYGON:
        case warp_sdk_core_1.ChainId.POLYGON_MUMBAI:
            return bignumber_1.BigNumber.from(31000);
        case warp_sdk_core_1.ChainId.CELO:
        case warp_sdk_core_1.ChainId.CELO_ALFAJORES:
            return bignumber_1.BigNumber.from(31000);
        case warp_sdk_core_1.ChainId.GNOSIS:
            return bignumber_1.BigNumber.from(31000);
        case warp_sdk_core_1.ChainId.MOONBEAM:
            return bignumber_1.BigNumber.from(31000);
        case warp_sdk_core_1.ChainId.IMX_TESTNET:
        case warp_sdk_core_1.ChainId.IMX_MAINNET:
            return bignumber_1.BigNumber.from(31000);
        default:
            return bignumber_1.BigNumber.from(31000);
    }
};
exports.COST_PER_INIT_TICK = COST_PER_INIT_TICK;
const COST_PER_HOP = (id) => {
    switch (id) {
        case warp_sdk_core_1.ChainId.MAINNET:
        case warp_sdk_core_1.ChainId.GOERLI:
        case warp_sdk_core_1.ChainId.SEPOLIA:
        case warp_sdk_core_1.ChainId.BNB:
        case warp_sdk_core_1.ChainId.OPTIMISM:
        case warp_sdk_core_1.ChainId.OPTIMISM_GOERLI:
        case warp_sdk_core_1.ChainId.AVALANCHE:
        case warp_sdk_core_1.ChainId.BASE:
        case warp_sdk_core_1.ChainId.BASE_GOERLI:
            return bignumber_1.BigNumber.from(80000);
        case warp_sdk_core_1.ChainId.ARBITRUM_ONE:
        case warp_sdk_core_1.ChainId.ARBITRUM_GOERLI:
            return bignumber_1.BigNumber.from(80000);
        case warp_sdk_core_1.ChainId.POLYGON:
        case warp_sdk_core_1.ChainId.POLYGON_MUMBAI:
            return bignumber_1.BigNumber.from(80000);
        case warp_sdk_core_1.ChainId.CELO:
        case warp_sdk_core_1.ChainId.CELO_ALFAJORES:
            return bignumber_1.BigNumber.from(80000);
        case warp_sdk_core_1.ChainId.GNOSIS:
            return bignumber_1.BigNumber.from(80000);
        case warp_sdk_core_1.ChainId.MOONBEAM:
            return bignumber_1.BigNumber.from(80000);
        case warp_sdk_core_1.ChainId.IMX_TESTNET:
        case warp_sdk_core_1.ChainId.IMX_MAINNET:
            return bignumber_1.BigNumber.from(80000);
        default:
            return bignumber_1.BigNumber.from(80000);
    }
};
exports.COST_PER_HOP = COST_PER_HOP;
const SINGLE_HOP_OVERHEAD = (_id) => {
    return bignumber_1.BigNumber.from(15000);
};
exports.SINGLE_HOP_OVERHEAD = SINGLE_HOP_OVERHEAD;
const TOKEN_OVERHEAD = (id, route) => {
    const tokens = route.tokenPath;
    let overhead = bignumber_1.BigNumber.from(0);
    if (id == warp_sdk_core_1.ChainId.MAINNET) {
        // AAVE's transfer contains expensive governance snapshotting logic. We estimate
        // it at around 150k.
        if (tokens.some((t) => t.equals(providers_1.AAVE_MAINNET))) {
            overhead = overhead.add(150000);
        }
        // LDO's reaches out to an external token controller which adds a large overhead
        // of around 150k.
        if (tokens.some((t) => t.equals(providers_1.LIDO_MAINNET))) {
            overhead = overhead.add(150000);
        }
    }
    return overhead;
};
exports.TOKEN_OVERHEAD = TOKEN_OVERHEAD;
// TODO: change per chain
const NATIVE_WRAP_OVERHEAD = (id) => {
    switch (id) {
        default:
            return bignumber_1.BigNumber.from(27938);
    }
};
exports.NATIVE_WRAP_OVERHEAD = NATIVE_WRAP_OVERHEAD;
const NATIVE_UNWRAP_OVERHEAD = (id) => {
    switch (id) {
        default:
            return bignumber_1.BigNumber.from(36000);
    }
};
exports.NATIVE_UNWRAP_OVERHEAD = NATIVE_UNWRAP_OVERHEAD;
const NATIVE_OVERHEAD = (chainId, amount, quote) => {
    if (amount.isNative) {
        // need to wrap eth in
        return (0, exports.NATIVE_WRAP_OVERHEAD)(chainId);
    }
    if (quote.isNative) {
        // need to unwrap eth out
        return (0, exports.NATIVE_UNWRAP_OVERHEAD)(chainId);
    }
    return bignumber_1.BigNumber.from(0);
};
exports.NATIVE_OVERHEAD = NATIVE_OVERHEAD;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2FzLWNvc3RzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL3JvdXRlcnMvYWxwaGEtcm91dGVyL2dhcy1tb2RlbHMvdjMvZ2FzLWNvc3RzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLHdEQUFxRDtBQUNyRCw0REFBb0U7QUFFcEUscURBQW1FO0FBR25FLDJDQUEyQztBQUM5QixRQUFBLG9CQUFvQixHQUFHLHFCQUFTLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBRXRELDZEQUE2RDtBQUN0RCxNQUFNLGNBQWMsR0FBRyxDQUFDLEVBQVcsRUFBYSxFQUFFO0lBQ3ZELFFBQVEsRUFBRSxFQUFFO1FBQ1YsS0FBSyx1QkFBTyxDQUFDLE9BQU8sQ0FBQztRQUNyQixLQUFLLHVCQUFPLENBQUMsTUFBTSxDQUFDO1FBQ3BCLEtBQUssdUJBQU8sQ0FBQyxPQUFPLENBQUM7UUFDckIsS0FBSyx1QkFBTyxDQUFDLFFBQVEsQ0FBQztRQUN0QixLQUFLLHVCQUFPLENBQUMsZUFBZSxDQUFDO1FBQzdCLEtBQUssdUJBQU8sQ0FBQyxHQUFHLENBQUM7UUFDakIsS0FBSyx1QkFBTyxDQUFDLFNBQVMsQ0FBQztRQUN2QixLQUFLLHVCQUFPLENBQUMsSUFBSSxDQUFDO1FBQ2xCLEtBQUssdUJBQU8sQ0FBQyxXQUFXO1lBQ3RCLE9BQU8scUJBQVMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDOUIsS0FBSyx1QkFBTyxDQUFDLFlBQVksQ0FBQztRQUMxQixLQUFLLHVCQUFPLENBQUMsZUFBZTtZQUMxQixPQUFPLHFCQUFTLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzlCLEtBQUssdUJBQU8sQ0FBQyxPQUFPLENBQUM7UUFDckIsS0FBSyx1QkFBTyxDQUFDLGNBQWM7WUFDekIsT0FBTyxxQkFBUyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUU5QixLQUFLLHVC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