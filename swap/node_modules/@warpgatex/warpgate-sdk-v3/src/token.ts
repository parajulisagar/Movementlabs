import { ethers } from "ethers";
import { ChainId, ERC20_ABI, RPC_URL } from "./constants";

/**
 * Retrieves information about a token.
 * @param tokenAddress The address of the token.
 * @param chainId The chain ID.
 * @returns An object containing the token's name, symbol, decimals, and address.
 *          Returns null if an error occurs.
 */
export const getTokenInfo = async (tokenAddress: string, chainId: number) => {
  if (!Object.values(ChainId).includes(Number(chainId))) {
    throw new Error("Invalid Chain ID");
  }
  try {
    const provider = new ethers.providers.JsonRpcProvider(RPC_URL[chainId]);
    const tokenContract = new ethers.Contract(
      tokenAddress,
      ERC20_ABI,
      provider
    );

    const [name, symbol, decimals] = await Promise.all([
      tokenContract.name(),
      tokenContract.symbol(),
      tokenContract.decimals(),
    ]);

    return {
      name,
      symbol,
      decimals,
      address: tokenAddress,
    };
  } catch (error) {
    console.log(error);
    return null;
  }
};
