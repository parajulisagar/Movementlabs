/**
 * Represents the Ether currency.
 * Extends the NativeCurrency class.
 */
import { Currency, NativeCurrency, Token } from "@uniswap/sdk-core";
export declare class Ether extends NativeCurrency {
    /**
     * Constructs a new instance of the Ether class.
     * @param chainId The chain ID of the Ether currency.
     */
    protected constructor(chainId: number);
    /**
     * Gets the wrapped token associated with Ether.
     * @returns The wrapped token.
     */
    get wrapped(): Token;
    private static _etherCache;
    /**
     * Retrieves the Ether instance for the specified chain ID.
     * If an instance does not exist, a new instance is created and cached.
     * @param chainId The chain ID.
     * @returns The Ether instance.
     */
    static onChain(chainId: number): Ether;
    /**
     * Checks if the Ether currency is equal to another currency.
     * @param other The other currency to compare.
     * @returns True if the currencies are equal, false otherwise.
     */
    equals(other: Currency): boolean;
}
